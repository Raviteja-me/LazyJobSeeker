rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for processedResumes collection
    match /processedResumes/{documentId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Rules for dailyUsage collection
    match /dailyUsage/{documentId} {
      // Allow read if the document ID starts with the user's UID
      allow read: if isAuthenticated() && documentId.matches(request.auth.uid + ".*");
      // Allow write if the document ID starts with the user's UID
      allow write: if isAuthenticated() && documentId.matches(request.auth.uid + ".*");
    }
  }
}
